{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///home/josedev/Escritorio/proyectos/nextjs_curso/nextjs-dashboard/auth.config.ts"],"sourcesContent":["import type { NextAuthConfig } from 'next-auth';\n \nexport const authConfig = {\n  pages: {\n    signIn: '/login',\n  },\n  callbacks: {\n    authorized({ auth, request: { nextUrl } }) {\n      const isLoggedIn = !!auth?.user;\n      const isOnDashboard = nextUrl.pathname.startsWith('/dashboard');\n      if (isOnDashboard) {\n        if (isLoggedIn) return true;\n        return false; // Redirect unauthenticated users to login page\n      } else if (isLoggedIn) {\n        return Response.redirect(new URL('/dashboard', nextUrl));\n      }\n      return true;\n    },\n  },\n  providers: [], // Add providers with an empty array for now\n} satisfies NextAuthConfig;"],"names":[],"mappings":";;;AAEO,MAAM,aAAa;IACxB,OAAO;QACL,QAAQ;IACV;IACA,WAAW;QACT,YAAW,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE;YACvC,MAAM,aAAa,CAAC,CAAC,MAAM;YAC3B,MAAM,gBAAgB,QAAQ,QAAQ,CAAC,UAAU,CAAC;YAClD,IAAI,eAAe;gBACjB,IAAI,YAAY,OAAO;gBACvB,OAAO,OAAO,+CAA+C;YAC/D,OAAO,IAAI,YAAY;gBACrB,OAAO,SAAS,QAAQ,CAAC,IAAI,IAAI,cAAc;YACjD;YACA,OAAO;QACT;IACF;IACA,WAAW,EAAE;AACf","debugId":null}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":["file:///home/josedev/Escritorio/proyectos/nextjs_curso/nextjs-dashboard/auth.ts"],"sourcesContent":["import NextAuth from 'next-auth';\nimport { authConfig } from './auth.config';\nimport Credentials from 'next-auth/providers/credentials';\nimport { z } from 'zod';\nimport type { User } from '@/app/lib/definitions';\nimport bcrypt from 'bcrypt';\nimport postgres from 'postgres';\n\nconst sql = postgres(process.env.POSTGRES_URL!, { ssl: 'require' });\n \nasync function getUser(email: string): Promise<User | undefined> {\n  try {\n    const user = await sql<User[]>`SELECT * FROM users WHERE email=${email}`;\n    return user[0];\n  } catch (error) {\n    console.error('Failed to fetch user:', error);\n    throw new Error('Failed to fetch user.');\n  }\n}\n \nexport const { auth, signIn, signOut } = NextAuth({\n    ...authConfig,\n    providers: [\n      Credentials({\n        async authorize(credentials) {\n          const parsedCredentials = z\n            .object({ email: z.string().email(), password: z.string().min(6) })\n            .safeParse(credentials);\n   \n          if (parsedCredentials.success) {\n            const { email, password } = parsedCredentials.data;\n            const user = await getUser(email);\n            if (!user) return null;\n            const passwordsMatch = await bcrypt.compare(password, user.password);\n          }\n   \n          console.log('Invalid credentials');\n            return null;\n        },\n      }),\n    ],\n  });\n  "],"names":[],"mappings":";;;;;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;;;;;;;AAEA,MAAM,MAAM,CAAA,GAAA,6LAAA,CAAA,UAAQ,AAAD,EAAE,QAAQ,GAAG,CAAC,YAAY,EAAG;IAAE,KAAK;AAAU;AAEjE,eAAe,QAAQ,KAAa;IAClC,IAAI;QACF,MAAM,OAAO,MAAM,GAAW,CAAC,gCAAgC,EAAE,MAAM,CAAC;QACxE,OAAO,IAAI,CAAC,EAAE;IAChB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,MAAM,IAAI,MAAM;IAClB;AACF;AAEO,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,wWAAA,CAAA,UAAQ,AAAD,EAAE;IAC9C,GAAG,8GAAA,CAAA,aAAU;IACb,WAAW;QACT,CAAA,GAAA,sNAAA,CAAA,UAAW,AAAD,EAAE;YACV,MAAM,WAAU,WAAW;gBACzB,MAAM,oBAAoB,qLAAA,CAAA,IAAC,CACxB,MAAM,CAAC;oBAAE,OAAO,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK;oBAAI,UAAU,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;gBAAG,GAChE,SAAS,CAAC;gBAEb,IAAI,kBAAkB,OAAO,EAAE;oBAC7B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,kBAAkB,IAAI;oBAClD,MAAM,OAAO,MAAM,QAAQ;oBAC3B,IAAI,CAAC,MAAM,OAAO;oBAClB,MAAM,iBAAiB,MAAM,qGAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ;gBACrE;gBAEA,QAAQ,GAAG,CAAC;gBACV,OAAO;YACX;QACF;KACD;AACH","debugId":null}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file:///home/josedev/Escritorio/proyectos/nextjs_curso/nextjs-dashboard/app/lib/actions.ts"],"sourcesContent":["'use server';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { redirect } from 'next/navigation';\nimport postgres from 'postgres';\n\nimport { signIn } from '@/auth';\nimport { AuthError } from 'next-auth';\n\nconst sql = postgres(process.env.POSTGRES_URL!, { ssl: 'require' });\n\nconst FormSchema = z.object({\n    id: z.string(),\n    customerId: z.string({\n        invalid_type_error: 'Please select a customer.',\n    }),\n    amount: z.coerce\n        .number()\n        .gt(0, { message: 'Please enter an amount greater than $0.' }),\n    status: z.enum(['pending', 'paid'], {\n        invalid_type_error: 'Please select an invoice status.',\n    }),\n    date: z.string(),\n});\n\nexport type State = {\n    errors?: {\n        customerId?: string[];\n        amount?: string[];\n        status?: string[];\n    };\n    message?: string | null;\n};\n\nconst CreateInvoice = FormSchema.omit({ id: true, date: true });\n\nexport async function createInvoice(prevState: State, formData: FormData) {\n    const validatedFields = CreateInvoice.safeParse({\n        customerId: formData.get('customerId'),\n        amount: formData.get('amount'),\n        status: formData.get('status'),\n    });\n\n    if (!validatedFields.success) {\n        return {\n            errors: validatedFields.error.flatten().fieldErrors,\n            message: 'Missing Fields. Failed to Create Invoice.',\n        };\n    }\n    // Prepare data for insertion into the database\n    const { customerId, amount, status } = validatedFields.data;\n    const amountInCents = amount * 100;\n    const date = new Date().toISOString().split('T')[0];\n\n    // Insert data into the database\n    try {\n        await sql`\n        INSERT INTO invoices (customer_id, amount, status, date)\n        VALUES (${customerId}, ${amountInCents}, ${status}, ${date})\n        `;\n    } catch (error) {\n        // If a database error occurs, return a more specific error.\n        return {\n            message: 'Database Error: Failed to Create Invoice.',\n        };\n    }\n    // Revalidate the cache for the invoices page and redirect the user.\n    revalidatePath('/dashboard/invoices');\n    redirect('/dashboard/invoices');\n}\n\nconst UpdateInvoice = FormSchema.omit({ id: true, date: true });\n\nexport async function updateInvoice(\n    id: string,\n    prevState: State,\n    formData: FormData,\n) {\n    const validatedFields = UpdateInvoice.safeParse({\n        customerId: formData.get('customerId'),\n        amount: formData.get('amount'),\n        status: formData.get('status'),\n    });\n\n    if (!validatedFields.success) {\n        return {\n            errors: validatedFields.error.flatten().fieldErrors,\n            message: 'Missing Fields. Failed to Update Invoice.',\n        };\n    }\n\n    const { customerId, amount, status } = validatedFields.data;\n    const amountInCents = amount * 100;\n\n    try {\n        await sql`\n        UPDATE invoices\n        SET customer_id = ${customerId}, amount = ${amountInCents}, status = ${status}\n        WHERE id = ${id}\n      `;\n    } catch (error) {\n        return { message: 'Database Error: Failed to Update Invoice.' };\n    }\n\n    revalidatePath('/dashboard/invoices');\n    redirect('/dashboard/invoices');\n}\n\nexport async function deleteInvoice(id: string) {\n    await sql`DELETE FROM invoices WHERE id = ${id}`;\n    revalidatePath('/dashboard/invoices');\n    throw new Error('Failed to Delete Invoice');\n}\n\nexport async function authenticate(\n    prevState: string | undefined,\n    formData: FormData,\n) {\n    try {\n        await signIn('credentials', formData);\n    } catch (error) {\n        if (error instanceof AuthError) {\n            switch (error.type) {\n                case 'CredentialsSignin':\n                    return 'Invalid credentials.';\n                default:\n                    return 'Something went wrong.';\n            }\n        }\n        throw error;\n    }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 306, "column": 0}, "map": {"version":3,"sources":["file:///home/josedev/Escritorio/proyectos/nextjs_curso/nextjs-dashboard/.next-internal/server/app/login/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {authenticate as '601938614a9ff10f1109249b24da5b8aeea7408ed3'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":["file:///home/josedev/Escritorio/proyectos/nextjs_curso/nextjs-dashboard/app/ui/acme-logo.tsx"],"sourcesContent":["import { GlobeAltIcon } from '@heroicons/react/24/outline';\nimport { lusitana } from '@/app/ui/fonts';\n\nexport default function AcmeLogo() {\n  return (\n    <div\n      className={`${lusitana.className} flex flex-row items-center leading-none text-white`}\n    >\n      <GlobeAltIcon className=\"h-12 w-12 rotate-[15deg]\" />\n      <p className=\"text-[44px]\">Acme</p>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;;;;AAEe,SAAS;IACtB,qBACE,6XAAC;QACC,WAAW,GAAG,mLAAA,CAAA,WAAQ,CAAC,SAAS,CAAC,mDAAmD,CAAC;;0BAErF,6XAAC,8SAAA,CAAA,eAAY;gBAAC,WAAU;;;;;;0BACxB,6XAAC;gBAAE,WAAU;0BAAc;;;;;;;;;;;;AAGjC","debugId":null}},
    {"offset": {"line": 404, "column": 0}, "map": {"version":3,"sources":["file:///home/josedev/Escritorio/proyectos/nextjs_curso/nextjs-dashboard/app/ui/login-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/ui/login-form.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/ui/login-form.tsx <module evaluation>\",\n    \"default\",\n);\nexport const metadata = registerClientReference(\n    function() { throw new Error(\"Attempted to call metadata() from the server but metadata is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/ui/login-form.tsx <module evaluation>\",\n    \"metadata\",\n);\n"],"names":[],"mappings":";;;;AAAA;;uCACe,CAAA,GAAA,oYAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyR,GACtT,uDACA;AAEG,MAAM,WAAW,CAAA,GAAA,oYAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,uDACA","debugId":null}},
    {"offset": {"line": 422, "column": 0}, "map": {"version":3,"sources":["file:///home/josedev/Escritorio/proyectos/nextjs_curso/nextjs-dashboard/app/ui/login-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/ui/login-form.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/ui/login-form.tsx\",\n    \"default\",\n);\nexport const metadata = registerClientReference(\n    function() { throw new Error(\"Attempted to call metadata() from the server but metadata is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/ui/login-form.tsx\",\n    \"metadata\",\n);\n"],"names":[],"mappings":";;;;AAAA;;uCACe,CAAA,GAAA,oYAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqQ,GAClS,mCACA;AAEG,MAAM,WAAW,CAAA,GAAA,oYAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,mCACA","debugId":null}},
    {"offset": {"line": 440, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 450, "column": 0}, "map": {"version":3,"sources":["file:///home/josedev/Escritorio/proyectos/nextjs_curso/nextjs-dashboard/app/login/page.tsx"],"sourcesContent":["import AcmeLogo from '@/app/ui/acme-logo';\nimport LoginForm from '@/app/ui/login-form';\nimport { Suspense } from 'react';\n \nexport default function LoginPage() {\n  return (\n    <main className=\"flex items-center justify-center md:h-screen\">\n      <div className=\"relative mx-auto flex w-full max-w-[400px] flex-col space-y-2.5 p-4 md:-mt-32\">\n        <div className=\"flex h-20 w-full items-end rounded-lg bg-blue-500 p-3 md:h-36\">\n          <div className=\"w-32 text-white md:w-36\">\n            <AcmeLogo />\n          </div>\n        </div>\n        <Suspense>\n          <LoginForm />\n        </Suspense>\n      </div>\n    </main>\n  );\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEe,SAAS;IACtB,qBACE,6XAAC;QAAK,WAAU;kBACd,cAAA,6XAAC;YAAI,WAAU;;8BACb,6XAAC;oBAAI,WAAU;8BACb,cAAA,6XAAC;wBAAI,WAAU;kCACb,cAAA,6XAAC,0HAAA,CAAA,UAAQ;;;;;;;;;;;;;;;8BAGb,6XAAC,oVAAA,CAAA,WAAQ;8BACP,cAAA,6XAAC,2HAAA,CAAA,UAAS;;;;;;;;;;;;;;;;;;;;;AAKpB","debugId":null}}]
}